<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>name</key>
	<string>MyST Markdown</string>
	<key>scopeName</key>
	<string>text.myst.injection</string>
	<key>injectionSelector</key>
	<string>L:(text.html.markdown -markup.fenced_code.block -markup.inserted.math -markup.directive.code -markup.directive.unknown)</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#line_comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#block_break</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#target_block</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#role_span</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#div-directive-block-start</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#directive-admonitions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#directive-math</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#directive-code</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#directive-default</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>line_comment</key>
		<dict>
			<key>match</key>
			<string>(^|\G)[ ]{0,3}\%\s*(.*)</string>
			<key>name</key>
			<string>comment.line.percentage.myst</string>
		</dict>
		<key>block_break</key>
		<dict>
			<key>match</key>
			<string>(?:^|\G)[ ]{0,3}(\+\+\++)\s*(.*)\s*</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.block_break.myst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>markup.attributes.block_break.myst</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>\{</string>
							<key>end</key>
							<string>\}</string>
							<key>name</key>
							<string>meta.embedded.json</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.json</string>
								</dict>
							</array>
						</dict>
					</array>
				</dict>
			</dict>
		</dict>
		<key>target_block</key>
		<dict>
			<key>match</key>
			<string>(?:^|\G)[ ]{0,3}\((.+?)\)(\=)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.variable.target.myst</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.target.myst</string>
				</dict>
			</dict>
		</dict>
		<key>role_span</key>
		<dict>
			<key>match</key>
			<string>(?&lt;!\\)(?:\\\\)*{([\:\-\_0-9a-zA-A]*)}(`+)(?!`)(.+?)(?&lt;!`)\2(?!`)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.role.myst</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>markup.inline.raw.string.role.myst</string>
				</dict>
			</dict>
		</dict>
		<key>div-directive-block-start</key>
		<dict>
			<key>match</key>
			<string>(?:^|\G)[ ]{0,3}(:{3,})\{([\:\-\_0-9a-zA-A]*)\}(.*)</string>
			<key>captures</key>
			<dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>markup.inline.raw.string.attribute.myst</string>
				</dict>
			</dict>
		</dict>
		<key>directive-admonitions</key>
		<dict>
			<key>comment</key>
			<string>These are directive blocks, whereby the content, should be treated as markdown</string>
			<key>begin</key>
			<string>(^|\G)(\s*)(`{3,}|~{3,})\{(attention|caution|danger|error|important|hint|note|tip|warning|seealso|admonition|margin|sidebar|toggle|dropdown|panels|epigraph|glossary|tabbed|tab-set|tab-item|div|figure)\}\s*(?=([^`~]*)?$)</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>markup.inline.raw.string.attribute.myst</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.markdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.markdown</string>
						</dict>
					</array>
				</dict>
			</array>
			<key>name</key>
			<string>markup.directive.admonition.myst</string>
		</dict>
		<key>directive-math</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(`{3,}|~{3,})\{(math)\}\s*(?=([^`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.math.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.latex</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>endCaptures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.embedded.block.options</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.yaml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>text.html.markdown.math#math</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code</key>
		<dict>
			<key>comment</key>
			<string>These are directive blocks containing code</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#directive-code-css</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-basic</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-ini</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-java</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-lua</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-makefile</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-perl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-r</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-ruby</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-php</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-sql</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-vs_net</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-xml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-xsl</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-yaml</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-dosbatch</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-clojure</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-coffee</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-c</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-cpp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-diff</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-dockerfile</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-git_commit</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-git_rebase</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-go</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-groovy</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-pug</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-js</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-js_regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-json</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-jsonc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-less</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-objc</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-swift</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-scss</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-perl6</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-powershell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-python</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-ipython</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-regexp_python</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-rust</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-scala</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-shell</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-svelte</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-ts</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-tsx</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-csharp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-fsharp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-dart</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-handlebars</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-markdown</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#directive-code-log</string>
				</dict>
			</array>
		</dict>
		<key>directive-code-css</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(css|css.erb)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.css</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>endCaptures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.embedded.block.options</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.yaml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>source.css</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-basic</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(html|htm|shtml|xhtml|inc|tmpl|tpl)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.html</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.basic</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-ini</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(ini|conf)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.ini</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.ini</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-java</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(java|bsh)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.java</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>endCaptures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.embedded.block.options</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.yaml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>source.java</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-lua</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(lua)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.lua</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.lua</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-makefile</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(Makefile|makefile|GNUmakefile|OCamlMakefile)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.makefile</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.makefile</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-perl</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(perl|pl|pm|pod|t|PL|psgi|vcl)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.perl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.perl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-r</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(R|r|s|S|Rprofile|\{\.r.+?\})((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.r</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.r</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-ruby</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(ruby|rb|rbx|rjs|Rakefile|rake|cgi|fcgi|gemspec|irbrc|Capfile|ru|prawn|Cheffile|Gemfile|Guardfile|Hobofile|Vagrantfile|Appraisals|Rantfile|Berksfile|Berksfile.lock|Thorfile|Puppetfile)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.ruby</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.ruby</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-php</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(php|php3|php4|php5|phpt|phtml|aw|ctp)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.php</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.basic</string>
						</dict>
						<dict>
							<key>include</key>
							<string>source.php</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-sql</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(sql|ddl|dml)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.sql</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.sql</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-vs_net</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(vb)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.vs_net</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.asp.vb.net</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-xml</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(xml|xsd|tld|jsp|pt|cpt|dtml|rss|opml)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.xml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.xml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-xsl</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(xsl|xslt)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.xsl</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.xml.xsl</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-yaml</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(yaml|yml)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.yaml</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.yaml</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-dosbatch</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(bat|batch)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.dosbatch</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.batchfile</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-clojure</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(clj|cljs|clojure)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.clojure</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.clojure</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-coffee</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(coffee|Cakefile|coffee.erb)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.coffee</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.coffee</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-c</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(c|h)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.c</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.c</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-cpp</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(cpp|c\+\+|cxx)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.cpp source.cpp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.cpp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-diff</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(patch|diff|rej)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.diff</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.diff</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-dockerfile</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(dockerfile|Dockerfile)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.dockerfile</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.dockerfile</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-git_commit</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(COMMIT_EDITMSG|MERGE_MSG)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.git-commit</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-git_rebase</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(git-rebase-todo)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.git-rebase</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-go</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(go|golang)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.go</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.go</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-groovy</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(groovy|gvy)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.groovy</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.groovy</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-pug</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(jade|pug)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.pug</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.pug</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-js</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(js|jsx|javascript|es6|mjs|cjs|\{\.js.+?\})((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.javascript</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>endCaptures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.embedded.block.options</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.yaml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>source.js</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-js_regexp</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(regexp)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.js.regexp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-json</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(json|json5|sublime-settings|sublime-menu|sublime-keymap|sublime-mousemap|sublime-theme|sublime-build|sublime-project|sublime-completions)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.json</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.json</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-jsonc</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(jsonc)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.jsonc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.json.comments</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-less</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(less)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.less</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.css.less</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-objc</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(objectivec|objective-c|mm|objc|obj-c|m|h)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.objc</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.objc</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-swift</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(swift)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.swift</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.swift</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-scss</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(scss)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.scss</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.css.scss</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-perl6</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(perl6|p6|pl6|pm6|nqp)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.perl6</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.perl.6</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-powershell</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(powershell|ps1|psm1|psd1)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.powershell</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.powershell</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-python</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(python|py|py3|rpy|pyw|cpy|SConstruct|Sconstruct|sconstruct|SConscript|gyp|gypi|\{\.python.+?\})((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>endCaptures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.embedded.block.options</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.yaml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>source.python</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-ipython</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(ipython|ipython2|ipython3|\{\.ipython.+?\})((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.python</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>endCaptures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.embedded.block.options</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.yaml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>source.python</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-regexp_python</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(re)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.regexp.python</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-rust</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(rust|rs|\{\.rust.+?\})((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.rust</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.rust</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-scala</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(scala|sbt)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.scala</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.scala</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-shell</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(shell|sh|bash|zsh|bashrc|bash_profile|bash_login|profile|bash_logout|.textmate_init|\{\.bash.+?\})((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.shellscript</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.shell</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-svelte</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(svelte)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.svelte</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>endCaptures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.embedded.block.options</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.yaml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>source.svelte</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-ts</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(typescript|ts)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.typescript</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>begin</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>end</key>
							<string>(^|\G)(-{3})\s*$</string>
							<key>endCaptures</key>
							<dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>punctuation.options.myst</string>
								</dict>
							</dict>
							<key>contentName</key>
							<string>meta.embedded.block.options</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>source.yaml</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>include</key>
							<string>source.ts</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-tsx</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(tsx)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.typescriptreact</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.tsx</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-csharp</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(cs|csharp|c#)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.csharp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.cs</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-fsharp</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(fs|fsharp|f#)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.fsharp</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.fsharp</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-dart</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(dart)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.dart</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>source.dart</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-handlebars</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(handlebars|hbs)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.handlebars</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.handlebars</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-markdown</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(markdown|md)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.markdown</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.html.markdown</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-code-log</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{(code|code-block|code-cell)\}\s*(?i:(log)((\s+|:|\{)[^\`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.code.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>support.variable.language.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(^|\G)(\s*)(.*)</string>
					<key>while</key>
					<string>(^|\G)(?!\s*([\`~]{3,})\s*$)</string>
					<key>contentName</key>
					<string>meta.embedded.block.log</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>text.log</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>directive-default</key>
		<dict>
			<key>begin</key>
			<string>(^|\G)(\s*)(\`{3,}|~{3,})\s*\{([\:\-\_0-9a-zA-A]+)\}\s*(?=([^`~]*)?$)</string>
			<key>name</key>
			<string>markup.directive.unknown.myst</string>
			<key>end</key>
			<string>(^|\G)(\2|\s{0,3})(\3)\s*$</string>
			<key>beginCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>support.class.directive.myst</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>markup.inline.raw.string.attribute.myst</string>
				</dict>
			</dict>
			<key>endCaptures</key>
			<dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.myst</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>markup.raw.content.myst</string>
		</dict>
	</dict>
</dict>
</plist>
